<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BCM</title>
    <link rel="shortcut icon" href="data:image/x-icon;,"type="image/x-icon">
    <link rel="stylesheet" href="/styles.css" type="text/css"> <!-- Link to your CSS file -->
    <style>
        /* Centering styles */
        .content-container {
            text-align: center;
            margin: 0 auto; /* Center horizontally */
            max-width: 1000px; /* Limit content width */
            padding: 0 20px; /* Add some padding */
        }
        header {
            text-align: center; /* Center the text within the header */
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin: 20px auto; /* Center the table */
        }
        tr:hover {
            background-color: #f2f2f2; /* Highlight the row on hover */
        }
        th, td {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
        }
        .btn {
            padding: 5px 10px;
            background-color: #0f41e4ad;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .full-width {
            grid-column: 1 / 5; /* Span across all four columns */
        }
        button {
            width: 90%; /* Full width of the grid */
            cursor: pointer;
            padding: 5px 10px;
            background-color: #0f41e4ad;
            color: #fff;
            border: none;
            border-radius: 4px;
        }
        #btn:disabled {
            background-color: #666;
        }
    </style>
</head>
<body>
    <header>
        <!-- Your header content goes here -->
        <h1>Blockchain Manager</h1>
        <%- include('partials/navbar', { user: user }) %>
    </header>

    <div class="content-container">
        <main>
            <!-- Your main content goes here -->
            <h2>Deployed Blockchains</h2>
            <br>
            <div class="full-width">
                <% if (user && user.role === 'admin') { %>
                    <button type="button" id="btn">Create New Blockchain</button>
                <% } else { %>
                    <button type="button" id="btn" disabled>Create New Blockchain</button>
                <% } %>
            </div>
            <table id="dataTable"></table>
        </main>
    </div>

    <script>
        async function fetchDataAndRender() {
            try {
                // Fetch JSON data from the server
                const response = await fetch('/api');
                let data = await response.json();
                data = data.map(i => {
                    if (i.status) return { "blockchain_id (bid)": i.id, owner: i.owner, status: 'active' }
                    else return { "blockchain_id (bid)": i.id, owner: i.owner, status: 'inactive' }
                });
                
                var table = document.getElementById("dataTable");
                table.innerHTML = '';

                // Create table header
                const keys = Object.keys(data)
                data.forEach((item, i) => {
                    if (i === 0) {
                        const keys = Object.keys(item);
                        const headerRow = table.insertRow();
                        keys.forEach(k => {
                            const headerCell = document.createElement("th");
                            const headerText = document.createTextNode(k.toUpperCase());
                            headerCell.appendChild(headerText);
                            headerRow.appendChild(headerCell);
                        });
                    }
                    const values = Object.values(item);
                    const dataRow = table.insertRow();
                    values.forEach(v => {
                        const dataCell = document.createElement("td");
                        const dataText = document.createTextNode(v);
                        if (v === 'active') dataCell.style = "color:darkgreen"
                        else if (v === 'inactive') dataCell.style = "color:darkred"
                        dataCell.appendChild(dataText);
                        dataRow.appendChild(dataCell);
                    });
                });
                const dataRows = table.querySelectorAll('tr:nth-child(n + 2)'); // Select all rows except the first (header) row
                dataRows.forEach((row, i) => {
                    row.addEventListener('click', () => {
                        // Handle row click event here
                        window.location.href = `/blockchain?bid=${data[i]["blockchain_id (bid)"]}`;
                    });
                });

            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        const btn = document.getElementById('btn');
        btn.addEventListener('click', async () => {
            window.location.href = '/new';
            // reset form
            //resetForms();
        })
        //if (<%-JSON.stringify(user)%>) 
        fetchDataAndRender();
    </script>

    <%- include('partials/footer') %>
</body>
</html>
