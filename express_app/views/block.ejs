<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BCM: Block</title>
    <link rel="shortcut icon" href="#">
    <link rel="stylesheet" href="/styles.css" type="text/css"> <!-- Link to your CSS file -->
    <style>
        .content-container {
            text-align: center;
            margin: 0 auto; /* Center horizontally */
            max-width: 1000px; /* Limit content width */
            padding: 0 20px; /* Add some padding */
        }
        header {
            text-align: center; /* Center the text within the header */
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin: 20px auto; /* Center the table */
        }
        tr:hover {
            background-color: #f2f2f2; /* Highlight the row on hover */
        }
        th, td {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: center;
        }
    </style>
</head>
<body>

    <header>
        <!-- Your header content goes here -->
        <h1>Blockchain Manager</h1>
        <%- include('partials/navbar', { user: user }) %>
    </header>

    <div class="content-container">
        <main>
            <!-- Your main content goes here -->
            <h2>Block Structure for BID: <%= bid%></h2>
            <br>
            <table id="dataTable"></table>
        </main>
    </div>

    <!-- Your JavaScript scripts or external links go here -->
    <script>
        const id = <%- JSON.stringify(bid) %>;
        async function fetchDataAndRender(bid) {
            try {
                // Fetch JSON data from the server
                const response = await fetch(`/api/${bid}/block`);
                let data = await response.json();
                data = { timeout: data.timeout, max_messages: data.batch_size.max_messages, max_bytes: data.batch_size.max_bytes };

                var table = document.getElementById("dataTable");
                table.innerHTML = '';

                const keys = Object.keys(data);
                const headerRow = table.insertRow();
                keys.forEach(k => {
                    const headerCell = document.createElement("th");
                    const headerText = document.createTextNode(k.toUpperCase());
                    headerCell.appendChild(headerText);
                    headerRow.appendChild(headerCell);
                });
                const values = Object.values(data);
                const dataRow = table.insertRow();
                values.forEach(v => {
                    const dataCell = document.createElement("td");
                    const dataText = document.createTextNode(v);
                    dataCell.appendChild(dataText);
                    dataRow.appendChild(dataCell);
                });
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }
        fetchDataAndRender(id);
    </script>

    <%- include('partials/footer') %>

</body>
</html>
